const els=[],aos=[],rem=new RegExp(/{{ .*? }}/g),w=new Proxy(window,{set:(e,r,o)=>(e[r]=o,render(),!0),get:(e,r)=>e[r]});let update=(o,d=!0)=>new Promise(e=>{let r=o.querySelectorAll("*");r.forEach(e=>{for(var r in e.childNodes)e.childNodes[r]?.nodeValue?.match(rem)&&(e.lxd||(e.lxd={nodes:{},props:{}}),e.lxd.nodes[r]=e.childNodes[r].nodeValue,els.includes(e)||els.push(e));for(var o in e)o.toLowerCase().includes("text")||o.includes("HTML")||e.getAttribute(o)?.toString()?.match(rem)&&(e.lxd||(e.lxd={nodes:{},props:{}}),e.lxd.props[o]=e.getAttribute(o),els.includes(e)||els.push(e))}),d&&aos.forEach(e=>{try{e[0]()}catch{}}),e()}),parse=e=>{let o=e.replaceAll("\n",""),r=o.match(rem);return r?.forEach(e=>{var r=e.slice(3,-3);o=o.split(e).join(Function("return "+r)())}),o},render=()=>{els.forEach(e=>{for(var r in e.lxd.nodes){var o=parse(e.lxd.nodes[r]);e.childNodes[r].nodeValue!==o&&(e.childNodes[r].nodeValue=o)}for(var d in e.lxd.props){var t=parse(e.lxd.props[d]);e[d]!==t&&(e[d]=t)}}),document.querySelectorAll("embed-html").forEach(e=>{e.innerHTML=parse(e.getAttribute("value"))}),aos.forEach(e=>{try{e[1]()}catch{}})},registerAddon=(e,r)=>aos.push([e,r]);document.addEventListener("DOMContentLoaded",()=>{update(document.body).then(()=>{render()})});