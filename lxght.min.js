const els=[],rem=new RegExp(/{{ .*? }}/g),w=new Proxy(window,{set:(e,r,o)=>(e[r]=o,render(),!0),get:(e,r)=>e[r]});let eh=()=>{document.querySelectorAll("embed-html").forEach(e=>{e.innerHTML=parse(e.getAttribute("value"))})},update=d=>new Promise((e,r)=>{let o=d.querySelectorAll("*");o.forEach(e=>{for(var r in e.childNodes)e.childNodes[r]?.nodeValue?.match(rem)&&(e.lxd||(e.lxd={nodes:{},props:{}}),e.lxd.nodes[r]=e.childNodes[r].nodeValue,els.includes(e)||els.push(e));for(var o in e)o.toLowerCase().includes("text")||o.includes("HTML")||e.getAttribute(o)?.toString()?.match(rem)&&(e.lxd||(e.lxd={nodes:{},props:{}}),e.lxd.props[o]=e.getAttribute(o),els.includes(e)||els.push(e))}),e()}),parse=t=>{let o=t.replaceAll("\n",""),m=o.match(rem);return m?.forEach(mv=>{let e=mv.slice(3,-3);o=o.split(mv).join(eval(e))}),o},render=()=>{els.forEach(e=>{for(var r in e.lxd.nodes)e.childNodes[r].nodeValue=parse(e.lxd.nodes[r]);for(var o in e.lxd.props)e[o]=parse(e.lxd.props[o])}),eh()};document.addEventListener("DOMContentLoaded",()=>{update(document.body).then(()=>{render()})});